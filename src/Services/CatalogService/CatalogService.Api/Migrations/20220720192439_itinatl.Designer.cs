// <auto-generated />
using CatalogService.Api.Infrastrcuture.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CatalogService.Api.Migrations
{
    [DbContext(typeof(CatalogContext))]
    [Migration("20220720192439_itinatl")]
    partial class itinatl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("Catalog_Brend_Id")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Catalog_Item_Id")
                .IncrementsBy(10);

            modelBuilder.HasSequence("Catalog_Type_Id")
                .IncrementsBy(10);

            modelBuilder.Entity("CatalogService.Api.Core.Domain.CatalogBrend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Catalog_Brend_Id");

                    b.Property<string>("Brend")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CatalogBrend", "catalog");
                });

            modelBuilder.Entity("CatalogService.Api.Core.Domain.CatalogItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Catalog_Item_Id");

                    b.Property<int>("CatalogBrendId")
                        .HasColumnType("int");

                    b.Property<int>("CatalogTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogBrendId");

                    b.HasIndex("CatalogTypeId");

                    b.ToTable("CatalogItem", "catalog");
                });

            modelBuilder.Entity("CatalogService.Api.Core.Domain.CatalogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Catalog_Type_Id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CatalogType", "catalog");
                });

            modelBuilder.Entity("CatalogService.Api.Core.Domain.CatalogItem", b =>
                {
                    b.HasOne("CatalogService.Api.Core.Domain.CatalogBrend", "CatalogBrend")
                        .WithMany("CatalogItems")
                        .HasForeignKey("CatalogBrendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatalogService.Api.Core.Domain.CatalogType", "catalogType")
                        .WithMany("CatalogItems")
                        .HasForeignKey("CatalogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatalogBrend");

                    b.Navigation("catalogType");
                });

            modelBuilder.Entity("CatalogService.Api.Core.Domain.CatalogBrend", b =>
                {
                    b.Navigation("CatalogItems");
                });

            modelBuilder.Entity("CatalogService.Api.Core.Domain.CatalogType", b =>
                {
                    b.Navigation("CatalogItems");
                });
#pragma warning restore 612, 618
        }
    }
}
